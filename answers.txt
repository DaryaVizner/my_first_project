1.Какие три основные области работы с файлами в Git (рабочая папка, индекс, репозиторий) и чем они отличаются?
 - Рабочая папка: Файлы, с которыми вы работаете.
 - Индекс: Промежуточная область для подготовки файлов к коммиту.
 - Репозиторий: База данных с историей всех коммитов.

2.Что происходит при выполнении команд:
 - git add: Переносит изменения из рабочей папки в индекс.
 - git commit: Фиксирует изменения из индекса в локальный репозиторий.
 - git push: Отправляет коммиты из локального репозитория в удалённый.

3.Почему важно писать информативные сообщения к коммитам а не просто "исправление" или "update"?
 - Информативные коммиты нужны для понимания истории изменений, облегчения отладки и сотрудничества в команде.

4.Чем отличается git add имя_файла от git add .? В каких случаях лучше использовать каждый вариант?
 - git add имя_файла: добавляет конкретный файл.
 - git add .: добавляет все файлы в текущей директории.
 - git add имя_файла - для точного контроля, git add . - для массового добавления.

5.Что показывает команда git status и как меняется ее вывод на разных этапах работы?
 - git status показывает состояние файлов (изменены/не отслеживаются/в индексе). Вывод меняется по мере добавления файлов в индекс.

6.Для чего нужна команда git remote add origin URL и что означает слово "origin"?
 - git remote add origin URL связывает локальный репозиторий с удалённым. "origin" - стандартное имя для удалённого репозитория.

7.Зачем нужен флаг -u в команде git push -u origin main при первой отправке изменений?
 - флаг -u устанавливает связь между локальной и удалённой веткой, чтобы в дальнейшем использовать просто git push.

8.Что такое ветка (branch) по умолчанию и какая у вас создалась (main или master)? Почему это важно?
 - ветка по умолчанию - главная ветка проекта (main/master). main - современное название, важно для согласованности в команде.

9.Как просмотреть историю коммитов и какую информацию о каждом коммите вы видите?
 - git log показывает историю коммитов: хэш, автора, дату и сообщение.

10.Что произойдет, если сделать изменения в файле, но не выполнить git add перед git commit?
 - если не сделать git add, изменения не попадут в коммит, так как git commit фиксирует только то, что находится в индексе.
